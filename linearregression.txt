# Day 6 - 100 Days of Machine Learning

## ðŸ“Œ Objective
Todayâ€™s focus was on applying **Linear Regression** to the **Iris** and **Wine** datasets. The goal was to build a simple regression model, visualize data, clean it properly, and evaluate performance using metrics.


## âœ… Tasks Completed

### 1. **Dataset Loading and Preprocessing**
- Used `sklearn.datasets` to load the **Iris** and **Wine** datasets.
- Converted the data into Pandas DataFrames.
- Checked for missing values and cleaned the data if necessary.

### 2. **Data Cleaning**
- Verified dataset using:
  ```python
  df.isnull().sum()
  df.info()
  df.describe()
  ```
- Filled missing values (if any) with:
  ```python
  df.fillna(df.mean(), inplace=True)
  ```
- Dropped rows with missing values if needed:
  ```python
  df.dropna(inplace=True)
  ```

### 3. **Data Visualization**
- Used **Seaborn** and **Matplotlib** for visualizations:
  ```python
  sns.pairplot(df, hue='target')
  plt.title('Pairplot')
  plt.show()

  plt.scatter(y_test, y_pred)
  plt.xlabel('True Values')
  plt.ylabel('Predicted Values')
  plt.title('True vs Predicted')
  plt.show()
  ```

### 4. **Model Training**
- Used **Linear Regression**:
  ```python
  from sklearn.linear_model import LinearRegression
  model = LinearRegression()
  model.fit(X_train, y_train)
  y_pred = model.predict(X_test)
  ```

### 5. **Model Evaluation**
- Evaluated using:
  ```python
  from sklearn.metrics import mean_squared_error, r2_score
  print("MSE:", mean_squared_error(y_test, y_pred))
  print("R2 Score:", r2_score(y_test, y_pred))
  ```


## ðŸ“Š Summary
- Understood the difference between Matplotlib and Seaborn.
- Learned to visualize relationships using pairplots and scatterplots.
- Applied Linear Regression and evaluated it.
- Cleaned the data using fillna, dropna, and verified it using `.info()` and `.isnull()`.

