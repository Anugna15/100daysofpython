import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Sample skewed data
df = pd.DataFrame({'value': [1, 10, 50, 100, 500, 1000]})

# Apply log transformation
df['log_value'] = np.log1p(df['value'])

# Compare
sns.histplot(df['value'], kde=True, color='red', label='Original')
sns.histplot(df['log_value'], kde=True, color='blue', label='Log Transformed')
plt.legend()
plt.title("Original vs Log Transformed Distribution")
plt.show()
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

# Sample dataset
X = np.arange(6).reshape(-1, 1)
y = X**2 + 3*X + 5

# Apply Polynomial Features
poly = PolynomialFeatures(degree=2)
X_poly = poly.fit_transform(X)

# Train Model
X_train, X_test, y_train, y_test = train_test_split(X_poly, y, test_size=0.2)
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

print("Input features:\n", X)
print("Polynomial features:\n", X_poly)
print("Predictions:", y_pred)
